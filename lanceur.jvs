

import java.net.URLEncoder;

import org.javascool.macros.Macros;

import org.javascool.tools.sound.FileSoundBit;

import javax.swing.ImageIcon;

import javax.swing.JOptionPane;

import java.awt. *;

import java.util.Arrays;

import java.util.List;

import java.util.Random;

//Test de couleur pour détecter un daltonisme
void test1() {
   int x,y,couleur;
   JOptionPane jop5, jop6, jop7, jop8;
   int testfait = 0;
   int testreal = 0;
   int bonnereponse = 0;
   int essai = 0;
   int[][] rouge = new int[800][400];
   int[][] vert = new int[800][400];
   int[][] bleu = new int[800][400];
   String path = System.getProperty("user.dir");
   jop8 = new JOptionPane();
   jop8.showMessageDialog(null, "Le jeu suivant a pour but de vérifier si votre oeil détecte correctement les nuances de couleurs.\nUn carré principal s'affiche en haut ainsi qu'une palette de nuance de ce carré.\nVous aurez 10 secondes pour trouver la nuance de ce carré en cliquant dessus.\nCe test sera répété 10 fois.\nLe test débutera à la fermeture de cette fenêtre!\nN'oubliez pas de redimensionner la fenêtre pour voir toutes les nuances!\nCOURAGE!", "INFORMATIONS", JOptionPane.INFORMATION_MESSAGE);
   while (testfait <10) {
      reset(800, 400, false);
      couleur = random(1, 6);
      switch(couleur) {
         case 1 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 255;
               vert[x][y] =0;
               bleu[x][y] =0;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
         case 2 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 0;
               vert[x][y] =255;
               bleu[x][y] =0;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
         case 3 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 0;
               vert[x][y] =0;
               bleu[x][y] =255;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
         case 4 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 255;
               vert[x][y] =255;
               bleu[x][y] =0;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
         case 5 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 255;
               vert[x][y] =0;
               bleu[x][y] =255;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
         case 6 : for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               rouge[x][y] = 0;
               vert[x][y] =255;
               bleu[x][y] =255;
               setPixel(x, y, rouge[x][y], vert[x][y], bleu[x][y]);
            }
         }
         break;
      }
      //Génération du carré (le plus a gauche) de même couleur que le principal généré au début
       for (x =0; x <160; x ++) {
         for (y =250; y <=350; y ++) {
            setPixel(x, y, rouge[400][100], vert[400][100], bleu[400][100]);
         }
      }
      for (x =161; x <320; x ++) {
         for (y =250; y <=350; y ++) {
            int r_carre2 = rouge[400][100] - 70;
            int v_carre2 = vert[400][100] - 70;
            int b_carre2 = bleu[400][100] - 70;
            if (r_carre2 < 0) {
               r_carre2 =0;
            }
            if (v_carre2 < 0) {
               v_carre2 =0;
            }
            if (b_carre2 < 0) {
               b_carre2 =0;
            }
            setPixel(x, y, r_carre2, v_carre2, b_carre2);
         }
      }
      for (x =321; x <480; x ++) {
         for (y =250; y <=350; y ++) {
            int r_carre3 = rouge[400][100] - 90;
            int v_carre3 = vert[400][100] - 90;
            int b_carre3 = bleu[400][100] - 90;
            if (r_carre3 < 0) {
               r_carre3 =0;
            }
            if (v_carre3 < 0) {
               v_carre3 =0;
            }
            if (b_carre3 < 0) {
               b_carre3 =0;
            }
            setPixel(x, y, r_carre3, v_carre3, b_carre3);
         }
      }
      for (x =481; x <640; x ++) {
         for (y =250; y <=350; y ++) {
            int r_carre4 = rouge[400][100] - 120;
            int v_carre4 = vert[400][100] - 120;
            int b_carre4 = bleu[400][100] - 120;
            if (r_carre4 < 0) {
               r_carre4 =0;
            }
            if (v_carre4 < 0) {
               v_carre4 =0;
            }
            if (b_carre4 < 0) {
               b_carre4 =0;
            }
            setPixel(x, y, r_carre4, v_carre4, b_carre4);
         }
      }
      for (x =641; x <800; x ++) {
         for (y =250; y <=350; y ++) {
            int r_carre5 = rouge[400][100] - 150;
            int v_carre5 = vert[400][100] - 150;
            int b_carre5 = bleu[400][100] - 150;
            if (r_carre5 < 0) {
               r_carre5 =0;
            }
            if (v_carre5 < 0) {
               v_carre5 =0;
            }
            if (b_carre5 < 0) {
               b_carre5 =0;
            }
            setPixel(x, y, r_carre5, v_carre5, b_carre5);
         }
      }
      int aleatoire = random(1, 5);
      switch(aleatoire) {
         case 1 : int[] couleurcarre1 = getPixelColor(60, 300);
         for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               setPixel(x, y, couleurcarre1[0], couleurcarre1[1], couleurcarre1[2]);
            }
         }
         break;
         case 2 : int[] couleurcarre2 = getPixelColor(250, 300);
         for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               setPixel(x, y, couleurcarre2[0], couleurcarre2[1], couleurcarre2[2]);
            }
         }
         break;
         case 3 : int[] couleurcarre3 = getPixelColor(400, 300);
         for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               setPixel(x, y, couleurcarre3[0], couleurcarre3[1], couleurcarre3[2]);
            }
         }
         break;
         case 4 : int[] couleurcarre4 = getPixelColor(600, 300);
         for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               setPixel(x, y, couleurcarre4[0], couleurcarre4[1], couleurcarre4[2]);
            }
         }
         break;
         case 5 : int[] couleurcarre5 = getPixelColor(700, 300);
         for (x =350; x <450; x ++) {
            for (y =50; y <=150; y ++) {
               setPixel(x, y, couleurcarre5[0], couleurcarre5[1], couleurcarre5[2]);
            }
         }
         break;
      }
      sleep(10000);
      int clic_x = getX();
      int clic_y = getY();
      while (clic_x < 0 || clic_x > 800 || clic_y < 250 || clic_y > 350) {
         clic_x = getX();
         clic_y = getY();
      }
      int[] couleurcarreclic = getPixelColor(clic_x, clic_y);
      int[] couleurcarreprincipal = getPixelColor(400, 100);
      if (couleurcarreclic[0] == couleurcarreprincipal[0] && couleurcarreclic[1] == couleurcarreprincipal[1] && couleurcarreclic[2] == couleurcarreprincipal[2]) {
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "vrai.wav");
         essai = 0;
         jop5 = new JOptionPane();
         jop5.showMessageDialog(null, "BONNE REPONSE!", "Résultats", JOptionPane.INFORMATION_MESSAGE);
         bonnereponse++;
         testreal ++;
      } else {
         essai = essai + 1;
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "faux.wav");
         jop6 = new JOptionPane();
         jop6.showMessageDialog(null, "MAUVAISE REPONSE!", "Résultats", JOptionPane.ERROR_MESSAGE);
         if (essai >= 5) {
            testfait =10;
         }
         testreal ++;
      }
      testfait ++;
     ;
   }
   org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "end.wav");
   jop7 = new JOptionPane();
   jop7.showMessageDialog(null, "Vous avez " + bonnereponse+" bonne(s) réponse(s) sur " + testreal + "! Appuyer sur OK pour obtenir le diagramme de vos résultats!", "Résultats", JOptionPane.INFORMATION_MESSAGE);
   reset(800, 400, false);
   for (x =100; x <600; x ++) {
      setPixel(x, 300, 0, 0, 0);
   }
   for (y =50; y <350; y ++) {
      setPixel(150, y, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 50, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 75, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 100, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 125, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 150, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 175, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 200, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 225, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 250, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 275, 0, 0, 0);
   }
   if (bonnereponse == 1) {
      for (x =200; x <250; x ++) {
         for (y =275; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 2) {
      for (x =200; x <250; x ++) {
         for (y =250; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 3) {
      for (x =200; x <250; x ++) {
         for (y =225; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 4) {
      for (x =200; x <250; x ++) {
         for (y =200; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 5) {
      for (x =200; x <250; x ++) {
         for (y =175; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 6) {
      for (x =200; x <250; x ++) {
         for (y =150; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 7) {
      for (x =200; x <250; x ++) {
         for (y =125; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 8) {
      for (x =200; x <250; x ++) {
         for (y =100; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 9) {
      for (x =200; x <250; x ++) {
         for (y =75; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (bonnereponse == 10) {
      for (x =200; x <250; x ++) {
         for (y =50; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   }
   save(path + "/resultats/test_nuance.pgn");
   sleep(10000);
   main();
}

//Test d'échelle acuité visuelle pour une distance donnée
void test2() {
   int x,y;
   int nombrelettre, i, nbrinitial;
   int niveau = 8;
   int erreur = 0;
   int palier = 1;
   String alphabet = "azertyuiopqsdfghjklmwxcvbn";
   String path = System.getProperty("user.dir");
   char lettrechar;
   char lettre, lettrevue;
   JOptionPane jop1, jop2, jop3;
   jop1 = new JOptionPane();
   jop1.showMessageDialog(null, "Message informatif :\nCe test nécessite 2 personnes pour être réalisé.\nLe \"patient\" indique la lettre qu'il perçoit.\nLe \"médecin\" rentre la lettre que le patient lui donne.\nSi la lecture est correcte, une nouvelle lettre s'affiche mais de taille inférieure. Sinon, la lettre affichée est de même taille.\nVeuillez placer le patient à  1 mètre de l'écran.\nLe test débutera à la fermeture de cette boîte d'informations.", "----Test d'acuité visuelle----", JOptionPane.INFORMATION_MESSAGE);
   nombrelettre = 20;
   nbrinitial = nombrelettre;
   while (nombrelettre > 0) {
      //génération aléatoire d'une lettre
       i = random(0, 25);
      lettrechar = alphabet.charAt(i);
      lettre = lettrechar;
      //chargement de la lettre
       load(path + "/images/" + niveau + "/" + lettre+".jpg", false, false);
      lettrevue = readChar("Quelle lettre voyez-vous? (en minuscule)");
      if (lettre == lettrevue) {
         niveau = niveau -1;
         palier ++;
         if (palier > 8) {
            palier = 8;
            nombrelettre = 0;
         }
         erreur = 0;
         println("Bonne réponse!");
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "vrai.wav");
         sleep(500);
         if (niveau < 1) {
            niveau = 1;
         }
      } else {
         println("Mauvaise réponse!");
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "faux.wav");
         erreur ++;
         if (erreur >=2) {
            println("Vous avez fait 2 erreurs!");
            nombrelettre = 0;
         }
         sleep(500);
      }
      nombrelettre = nombrelettre-1;
   }
   println("Votre avez atteint le palier n°" + palier + ".");
   if (palier > 6) {
      jop2 = new JOptionPane();
      jop2.showMessageDialog(null, "Vous avez une excellente vue! Bravo! Vous avez atteint le palier n°" + palier + ".", "Résultats!", JOptionPane.INFORMATION_MESSAGE);
      reset(800, 400, false);
      for (x =100; x <600; x ++) {
         setPixel(x, 300, 0, 0, 0);
      }
      for (y =50; y <350; y ++) {
         setPixel(150, y, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 100, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 125, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 150, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 175, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 200, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 225, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 250, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 275, 0, 0, 0);
      }
      if (palier == 7) {
         for (x =200; x <250; x ++) {
            for (y =125; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      } else if (palier == 8) {
         for (x =200; x <250; x ++) {
            for (y =100; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      }
      save(path + "/resultats/test_acuite.pgn");
      sleep(10000);
      main();
   } else if (palier == 6) {
      org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "end.wav");
      jop3 = new JOptionPane();
      jop3.showMessageDialog(null, "Vous avez une bonne vue! C'est bien! Vous avez atteint le palier n°6.", "Résultats!", JOptionPane.INFORMATION_MESSAGE);
      reset(800, 400, false);
      for (x =100; x <600; x ++) {
         setPixel(x, 300, 0, 0, 0);
      }
      for (y =50; y <350; y ++) {
         setPixel(150, y, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 100, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 125, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 150, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 175, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 200, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 225, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 250, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 275, 0, 0, 0);
      }
      for (x =200; x <250; x ++) {
         for (y =150; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
      save(path + "/resultats/test_acuite.pgn");
      sleep(10000);
      main();
   } else {
      org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "end.wav");
      reset(800, 400, false);
      for (x =100; x <600; x ++) {
         setPixel(x, 300, 0, 0, 0);
      }
      for (y =50; y <350; y ++) {
         setPixel(150, y, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 100, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 125, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 150, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 175, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 200, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 225, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 250, 0, 0, 0);
      }
      for (x =140; x <160; x ++) {
         setPixel(x, 275, 0, 0, 0);
      }
      if (palier == 1) {
         for (x =200; x <250; x ++) {
            for (y =275; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      } else if (palier == 2) {
         for (x =200; x <250; x ++) {
            for (y =250; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      } else if (palier == 3) {
         for (x =200; x <250; x ++) {
            for (y =225; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      } else if (palier == 4) {
         for (x =200; x <250; x ++) {
            for (y =200; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      } else if (palier == 5) {
         for (x =200; x <250; x ++) {
            for (y =175; y <=299; y ++) {
               setPixel(x, y, 255, 0, 0);
            }
         }
      }
      save(path + "/resultats/test_acuite.pgn");
      sleep(10000);
      int codepostal = readInteger("Palier " + palier + "!. Votre vue peut être corrigée, saisissez votre code postal, un opthtalmologiste près de chez vous vous sera communiqué (-1 pour retourner au menu)");
      if (codepostal == -1) {
         main();
      } else {
         openURL("http://www.opticiensenfrance.com/recherche?type=practicien_ophtalmologiste&tid=All&localite=" + codepostal);
      }
   }
}

//Test d'Ishihara
void test3() {
   //variable
    int x,y;
   JOptionPane jop4;
   String path = System.getProperty("user.dir");
   int score =0;
   double nbrimageaudebut1 = 10;
   double palier1 =0;
   //Programme Principal
    int nbrimage = 10;
   while (nbrimage >0) {
      List < Integer > list = Arrays.asList(2, 3, 5, 6, 7, 8, 15, 26, 35, 42, 45, 57, 62, 73, 96, 97);
      Random random = new Random();
      int pos = random.nextInt(list.size());
      int i = list.get(pos);
      load(path + "/Ishihara/" + i + ".jpg", false, false);
      int reponse = readInt("Quel chiffre voyez-vous?");
      if (reponse == i) {
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "vrai.wav");
         score = score+1;
         palier1 ++;
      } else {
         score = score-1;
         org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "faux.wav");
      }
      nbrimage = nbrimage-1;
   }
   reset(800, 400, false);
   for (x =100; x <600; x ++) {
      setPixel(x, 300, 0, 0, 0);
   }
   for (y =50; y <350; y ++) {
      setPixel(150, y, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 50, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 75, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 100, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 125, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 150, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 175, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 200, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 225, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 250, 0, 0, 0);
   }
   for (x =140; x <160; x ++) {
      setPixel(x, 275, 0, 0, 0);
   }
   if (palier1 == 1) {
      for (x =200; x <250; x ++) {
         for (y =275; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 2) {
      for (x =200; x <250; x ++) {
         for (y =250; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 3) {
      for (x =200; x <250; x ++) {
         for (y =225; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 4) {
      for (x =200; x <250; x ++) {
         for (y =200; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 5) {
      for (x =200; x <250; x ++) {
         for (y =175; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 6) {
      for (x =200; x <250; x ++) {
         for (y =150; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 7) {
      for (x =200; x <250; x ++) {
         for (y =125; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 8) {
      for (x =200; x <250; x ++) {
         for (y =100; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 9) {
      for (x =200; x <250; x ++) {
         for (y =75; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   } else if (palier1 == 10) {
      for (x =200; x <250; x ++) {
         for (y =50; y <=299; y ++) {
            setPixel(x, y, 255, 0, 0);
         }
      }
   }
   save(path + "/resultats/test_ishihara.pgn");
   sleep(10000);
   double division = palier1 / nbrimageaudebut1;
   if (division > 0.6) {
      int palier = (int)palier1;
      int nbrimageaudebut = (int)nbrimageaudebut1;
      org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "end.wav");
      jop4 = new JOptionPane();
      jop4.showMessageDialog(null, "Félicitations! Vous avez trouvé " + palier + " images sur " + nbrimageaudebut + ". Vous n'êtes pas daltonien!", "Résultats", JOptionPane.INFORMATION_MESSAGE);
      main();
   } else {
      org.javascool.tools.sound.FileSoundBit.play(path + "/son/" + "end.wav");
      int codepostal2 = readInteger("Votre vue peut être corrigée, saisissez votre code postal, un opthtalmologiste près de chez vous vous sera communiqué (-1 pour retourner au menu)");
      if (codepostal2 == -1) {
         main();
      } else {
         openURL("http://www.opticiensenfrance.com/recherche?type=practicien_ophtalmologiste&tid=All&localite=" + codepostal2);
      }
   }
}

void main() {
   //déclaration des variables
    int choix = 0;
   String path2 = System.getProperty("user.dir");
   JOptionPane jop9, jop10;
   //Programme principal
    org.javascool.tools.sound.FileSoundBit.play(path2 + "/son/" + "menu.wav");
   jop9 = new JOptionPane();
   jop9.showMessageDialog(null, "Bonjour!\nCe programme, composé de plusieurs tests a pour vocation de dépister chez vous une éventuelle anomalie liée à la vue, comme par exemple le daltonisme.\nLe daltonisme est une anomalie dans laquelle un ou plusieurs des trois types de cônes de la rétine oculaire, responsables de la perception des couleurs, sont déficients.\nHabituellement, le daltonisme est classé comme une infirmité légère.\nMais il existe aussi des situations où les daltoniens peuvent avoir un avantage sur les individus ayant une vision normale.\nBasées sur quelques études, il existe des conclusions affirmant que les daltoniens sont plus à même que ceux ayant une vision normale,\nà percer certains camouflages basés sur la couleur.\nCela peut être une explication évolutive de la fréquence étonnament haute de daltonisme rouge-vert congénitale.\nVous pouvez réaliser les tests suivant:\n1. Test de couleur pour détecter un daltonisme.\n2. Test d'échelle acuité visuelle pour une distance donnée.\n3. Test d'Ishihara.\n4. Plus d'informations sur le daltonisme.\n5. Un ophtalmologiste près de chez vous ;)\n6. Vos résultats\n7. Quitter\nCrédit musiques: themushroomkingdom.net\nActiver le son, appuyer sur OK et saissiser votre choix ;)", "INFORMATIONS", JOptionPane.INFORMATION_MESSAGE);
   while (choix < 1 || choix >7) {
      choix = readInteger("Selectionnez votre test");
   }
   switch(choix) {
      case 1 : test1();
      break;
      case 2 : test2();
      break;
      case 3 : test3();
      break;
      case 4 : Macros.openURL("http://fr.wikipedia.org/wiki/Daltonisme");
      break;
      case 5 : int codepostal3 = readInteger("Saissisez votre code postal (exemple: 64000)");
      Macros.openURL("http://www.opticiensenfrance.com/recherche?type=practicien_ophtalmologiste&tid=All&localite=" + codepostal3);
      break;
      case 6 : Macros.openURL("resultats.html");
      break;
      case 7 : jop10 = new JOptionPane();
      jop10.showMessageDialog(null, "MERCI!", "INFORMATIONS", JOptionPane.INFORMATION_MESSAGE);
      System.exit(0);
      break;
      default : choix = 0;
   }
}

